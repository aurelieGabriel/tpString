//****************************************************************************
//
//
//
//****************************************************************************
 
 
 
 
// ===========================================================================
//                               Include Libraries
// ===========================================================================
#include <stdlib.h>
#include <stdio.h>



// ===========================================================================
//                             Include Project Files
// ===========================================================================
#include "String.h"


// ===========================================================================
//                         Declare Miscellaneous Functions
// ===========================================================================








// ===========================================================================
//                                   The Main
// ===========================================================================
int main(int argc, char* argv[])
{

//--------------------------------------------------------------------------
//test for the copy constructor
//--------------------------------------------------------------------------

  String s1; 
  String s2= String(s1);
 
  int i;
  for(i=0; i<4; i++)
    {
    printf("%c ", s2.data[i]);
    }
  printf("\n");

//--------------------------------------------------------------------------
// Test of the constructor with c_String
//--------------------------------------------------------------------------
  String s3 = String(s1.data);
  printf("%d %c\n",s3.length_,s3.data[0]);

//--------------------------------------------------------------------------
// Test of the c_str methode
//--------------------------------------------------------------------------
  const char * c1;
  c1 =  s1.c_str();
  int j;
  for(j=0; j<4; j++)
    {
    printf("%c ", c1[j]);
    }
  printf("\n");

//--------------------------------------------------------------------------
// Test of the length method
//--------------------------------------------------------------------------
  printf("%d\n",s3.length());


//--------------------------------------------------------------------------
// Test of the size method
//--------------------------------------------------------------------------

  printf("%d\n",s3.size());

//--------------------------------------------------------------------------
//test method Empty
//--------------------------------------------------------------------------
  
  bool t=s1.Empty();
  printf("%d\n",t);

 
//--------------------------------------------------------------------------
//test method capacity
//--------------------------------------------------------------------------
  printf("%d\n",s1.capacity());

//--------------------------------------------------------------------------
//test method reserve
//--------------------------------------------------------------------------
s1.reserve(25);
printf("%d\n",s1.capacity());
/*
for(i=0;i<s1.capacity_;i++)
{
	printf("%c\n",s1.data[i]);
}
*/
//--------------------------------------------------------------------------
//test method operator=
//--------------------------------------------------------------------------
s1="blabla";
for(i=0;i<s1.capacity_;i++)
{
	printf("%c\n",s1.data[i]);
}
 


//--------------------------------------------------------------------------
// test of the max_size method
//--------------------------------------------------------------------------
printf("%d\n",String::max_size());


//---------------------------------------------------------------------------
// Test of the resize method
//---------------------------------------------------------------------------
// with n<length
  s1.resize(2,'c');
  printf("%d\n",s1.length());
  for(i=0; i<s1.length(); i++)
    {
      printf("%c", s1.data[i]);
    }
  printf("\n");

// with n>length
  s1.resize(10,'c');
  printf("%d\n",s1.length());
  for(i=0; i<s1.length(); i++)
    {
    printf("%c", s1.data[i]);
    }
  printf("\n");

//--------------------------------------------------------------------------
// Test for the at method
//--------------------------------------------------------------------------
  printf("%c\n",s1.at(0));
 
  return 0;
}




// ===========================================================================
//                         Define Miscellaneous Functions
// ===========================================================================

